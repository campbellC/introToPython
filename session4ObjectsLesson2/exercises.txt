Simple inheritance exercise:

Make a Pet class. Pets have a name and species and know how to print this information. Give Pet a speak() method that doesn't do anything.
Now make Dog and Cat subclasses of Pet, Dogs can wag their tails but Cats can purr.
Now make a Bird subclass that also has a method flap wings.
Now make a Pigeon class which is a subclass of Bird and can Poo on command.
Notice the several layers of inheritance. The inheritance diagram should form a rooted tree.



More complicated examples with hooks:

Implement all of the hooks for Rational.




Write a class for real-valued functions. They should implement __add__, __sub__, __mul__ and __call__. Note that you can pass a Python function as a variable to your constructor (we havenâ€™t talked about this yet) so you can store it as a field and call it in your __call__ method.

Write a subclass of this for differentiable functions. Give them a derivative method and overload the constructor.
